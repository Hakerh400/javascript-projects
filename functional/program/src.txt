0, 1,
==, =, [],
read, write, eof,

=(main, [](space, num1, num2, num3, byte, b1, b2, mode)(
  =(space, Byte(0, 0, 0, 0, 0, 1, 0, 0)),

  =(num1, List()),
  =(num2, List()),
  =(num3, List()),

  =(mode, 0),

  while([]()(
    not(eof())
  ), []()(
    =(byte, readByte()),

    eq(byte, space)([]()(
      =(mode, 1)
    ), []()(
      mode(num2, num1).push(byte)
    ))()
  )),

  while([]()(
    ||(bool(num1 .head), bool(num2 .head))
  ), []()(
    =(b1, not(=(b1, num1 .pop()))([]()(
      Byte()
    ), []()(
      +(b1, Byte(0, 0, 0, 0, 1, 0, 1, 1))
    ))()),

    =(b2, not(=(b2, num2 .pop()))([]()(
      Byte()
    ), []()(
      +(b2, Byte(0, 0, 0, 0, 1, 0, 1, 1))
    ))()),

    =(byte, +(b1, b2)),
    num3 .push(byte)
  )),

  while([]()(
    num3 .head
  ), []()(
    =(byte, num3 .pop()),
    writeByte(+(byte, Byte(0, 0, 0, 0, 1, 1, 0, 0)))
  ))
)),

////////////////////////////////////////////////////////////////////////////////////////////////////,

=(nop, []()(nop)),
=(not, [](a)(==(a, 0))),
=(bool, [](a)(not(not(a)))),

=(&&, [](a, b)(a(b))),
=(||, [](a, b)(a(1, b))),
=(^^, [](a, b)(a(not(b), b))),

////////////////////////////////////////////////////////////////////////////////////////////////////,

=(while, [](cond, func, temp)(
  =(temp, bool(cond()))(while)(cond, func, temp(func)())
)),

////////////////////////////////////////////////////////////////////////////////////////////////////,

=(Pair, [](a, b)(
  [](mode, index, val)(
    =(index, not(index)),
    not(mode)([]()(
      index(a, b)
    ), []()(
      index([]()(
        =(a, val)
      ), []()(
        =(b, val)
      ))()
    ))()
  )
)),

////////////////////////////////////////////////////////////////////////////////////////////////////,

=(Byte, [](a, b, c, d, e, f, g, h, pair)(
  =(pair, Pair(Pair(Pair(a, b), Pair(c, d)), Pair(Pair(e, f), Pair(g, h)))),
  [](mode, i0, i1, i2, val)(
    pair(0, i2)(0, i1)(mode, i0, val)
  )
)),

=(clone, [](byte)(
  Byte(
    byte(0, 0, 0, 0), byte(0, 1, 0, 0),
    byte(0, 0, 1, 0), byte(0, 1, 1, 0),
    byte(0, 0, 0, 1), byte(0, 1, 0, 1),
    byte(0, 0, 1, 1), byte(0, 1, 1, 1)
  )
)),

=(forEach, [](byte, func)(
  func(byte(0, 0, 0, 0), 0, 0, 0), func(byte(0, 1, 0, 0), 1, 0, 0),
  func(byte(0, 0, 1, 0), 0, 1, 0), func(byte(0, 1, 1, 0), 1, 1, 0),
  func(byte(0, 0, 0, 1), 0, 0, 1), func(byte(0, 1, 0, 1), 1, 0, 1),
  func(byte(0, 0, 1, 1), 0, 1, 1), func(byte(0, 1, 1, 1), 1, 1, 1),
  byte
)),

=(map, [](byte, func)(
  =(byte, clone(byte)),
  forEach(byte, [](bit, i0, i1, i2)(
    byte(1, i0, i1, i2, func(bit, i0, i1, i2))
  ))
)),

=(eq, [](b1, b2, temp)(
  =(temp, 1),
  forEach(b1, [](bit, i0, i1, i2)(
    =(temp, &&(temp, ==(bit, b2(0, i0, i1, i2))))
  )),
  temp
)),

=(&, [](b1, b2)(
  map(a, [](bit, i0, i1, i2)(&&(bit, b2(0, i0, i1, i2))))
)),

=(|, [](b1, b2)(
  map(a, [](bit, i0, i1, i2)(||(bit, b2(0, i0, i1, i2))))
)),

=(^, [](b1, b2)(
  map(a, [](bit, i0, i1, i2)(^^(bit, b2(0, i0, i1, i2))))
)),

=(+c, [](b1, b2, carry)(
  =(carry, 0),
  Pair(map(b1, [](bit1, i0, i1, i2, bit2, temp)(
    =(bit2, b2(0, i0, i1, i2)),
    =(temp, ^^(carry, ^^(bit1, bit2))),
    =(carry, ||(&&(bit1, bit2), ||(&&(bit1, carry), &&(bit2, carry)))),
    temp
  )), carry)
)),

=(+, [](b1, b2)(
  +c(b1, b2)(0, 0)
)),

////////////////////////////////////////////////////////////////////////////////////////////////////,

=(.head, []()()),
=(.tail, []()()),

=(.push, []()()),
=(.pop, []()()),
=(.unshift, []()()),
=(.shift, []()()),

=(List, [](head, tail, _push, _pop, _unshift, _shift)(
  =(head, 0),
  =(tail, 0),

  =(_push, [](val, elem)(
    =(elem, Pair(val, Pair(tail))),

    not(head)([]()(
      =(head, =(tail, elem))
    ), []()(
      tail(0, 1)(1, 1, elem),
      =(tail, elem)
    ))()
  )),

  =(_pop, [](val)(
    =(val, tail(0, 0)),
    =(tail, tail(0, 1)(0, 0)),

    not(tail)([]()(
      =(head, 0)
    ), []()(
      tail(0, 1)(1, 1, 0)
    ))(),

    val
  )),

  =(_unshift, [](val, elem)(
    =(elem, Pair(val, Pair(0, head))),

    not(head)([]()(
      =(head, =(tail, elem))
    ), []()(
      head(0, 1)(1, 0, elem),
      =(head, elem)
    ))()
  )),

  =(_shift, [](val)(
    =(val, head(0, 0)),
    =(head, head(0, 1)(0, 1)),

    not(head)([]()(
      =(tail, 0)
    ), []()(
      head(0, 1)(1, 0, 0)
    ))(),

    val
  )),

  [](method)(
    ==(method, .head)(head,
    ==(method, .tail)(tail,
    ==(method, .push)(_push,
    ==(method, .pop)(_pop,
    ==(method, .unshift)(_unshift,
    ==(method, .shift)(_shift
    ))))))
  )
)),

////////////////////////////////////////////////////////////////////////////////////////////////////,

=(readByte, []()(
  Byte(
    read(), read(), read(), read(),
    read(), read(), read(), read()
  )
)),

=(writeByte, [](byte)(
  forEach(byte, write)
)),

////////////////////////////////////////////////////////////////////////////////////////////////////,

main()