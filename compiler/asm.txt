:init call

data:
  ivt: [1024]
  str: [1024]

init:
  0 enter

  :initIvt call
  :enableInts call
  :main call
  :shutDown call

  0 leavev

initIvt:
  0 enter
  :ivt popIvtp
  :mboard :ivt 0 add write
  :timer :ivt 4 add write
  :input :ivt 8 add write
  :output :ivt 12 add write
  0 0x03 out
  1 0x13 out
  2 0x23 out
  3 0x33 out
  0 leavev

enableInts:
  0 enter
  inte
  0 leavev

mboard:
  rti

timer:
  rti

input:
  rti

output:
  rti

shutDown:
  0 enter
  1 0 out
  halt
  0 leavev
187:
  _0 _0 _0 _0
3:
  16
  enter
  10
  -4
  varSet
  808464432
  -8
  varSet
  0
  -12
  varSet
  1
  -16
  varSet
  0
  push
  -12
  varSet
  pop
  37:
  -12
  varGet
  4
  lt
  :38
  jz
  -16
  varGet
  10
  mul
  push
  -16
  varSet
  pop
  57:
  -12
  varGet
  1
  add
  push
  -12
  varSet
  pop
  :37
  jmp
  38:
  0
  push
  -12
  varSet
  pop
  -12
  varGet
  1
  add
  push
  -12
  varSet
  pop
  8
  varGet
  -16
  varGet
  mod
  push
  8
  varSet
  pop
  0
  push
  -12
  varSet
  pop
  110:
  8
  varGet
  :111
  jz
  -8
  varGet
  8
  varGet
  10
  mod
  3
  -12
  varGet
  sub
  3
  shl
  shl
  or
  push
  -8
  varSet
  pop
  8
  varGet
  10
  div
  push
  8
  varSet
  pop
  -12
  varGet
  1
  add
  push
  -12
  varSet
  pop
  :110
  jmp
  111:
  pushEbp 8 sub 0x35 out
  5 0x34 out
  1 0x30 out
  printf1:
  dispatch
  0x31 in 1 and
  :printf1 jz
  0 0x30 out
  4
  leavev
main:
189:
  4
  enter
  0
  -4
  varSet
  206:
  1
  :207
  jz
  :187
  read
  -4
  varGet
  add
  :185
  call
  :187
  read
  :187
  read
  14
  add
  mul
  8
  shr
  29586
  xor
  push
  :187
  write
  pop
  :206
  jmp
  207:
  0
  0
  leave
266:
  0
  enter
  8
  varGet
  :187
  read
  add
  4
  leave